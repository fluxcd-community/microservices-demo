apiVersion: apps/v1
kind: Deployment
metadata:
  name: "${app_name:=demo}-redis"
  labels:
    app.kubernetes.io/part-of: "${app_name:=demo}"
  annotations:
    app.kubernetes.io/owner: "${app_name:=demo}-team"
spec:
  minReadySeconds: 2
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  selector:
    matchLabels:
      app.kubernetes.io/name: "${app_name:=demo}-redis"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "${app_name:=demo}-redis"
    spec:
      containers:
        - name: "${app_name:=demo}-redis"
          image: "redis:${redis_version:=6.2.7-alpine}"
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            - "/redis-master/redis.conf"
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 16Mi
          volumeMounts:
            - mountPath: /var/lib/redis
              name: data
            - mountPath: /redis-master
              name: config
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: "${app_name:=demo}-redis"
            items:
              - key: redis.conf
                path: redis.conf
